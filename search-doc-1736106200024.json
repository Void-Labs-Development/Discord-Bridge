{"searchDocs":[{"title":"EmbedFields","type":0,"sectionRef":"#","url":"/Discord-Bridge/api/EmbedFields","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"EmbedFields","url":"/Discord-Bridge/api/EmbedFields#types","content":" ","version":null,"tagName":"h2"},{"title":"Fields​","type":1,"pageTitle":"EmbedFields","url":"/Discord-Bridge/api/EmbedFields#Fields","content":"&lt;/&gt; type Fields = {EmbedField} An alias for a table filled with type EmbedField  ","version":null,"tagName":"h3"},{"title":"EmbedField​","type":1,"pageTitle":"EmbedFields","url":"/Discord-Bridge/api/EmbedFields#EmbedField","content":"&lt;/&gt; interface EmbedField { Title: string Content: string Inline: boolean } Describes what a single field looks like. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"EmbedFields","url":"/Discord-Bridge/api/EmbedFields#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"EmbedFields","url":"/Discord-Bridge/api/EmbedFields#new","content":"&lt;/&gt; EmbedFields.new() → EmbedFields   ","version":null,"tagName":"h3"},{"title":"AddField​","type":1,"pageTitle":"EmbedFields","url":"/Discord-Bridge/api/EmbedFields#AddField","content":"&lt;/&gt; EmbedFields:AddField( Title: string, Content: string, Inline: boolean ) → EmbedFields Adds a new field and returns self to allow for chaining. For example: local Fields = EmbedFields.new() :AddField(&quot;First&quot;, &quot;Hello World!&quot;, true) :AddField(&quot;Another&quot;, &quot;Bye World&quot;, true)  ","version":null,"tagName":"h3"},{"title":"Hook","type":0,"sectionRef":"#","url":"/Discord-Bridge/api/Hook","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Hook","url":"/Discord-Bridge/api/Hook#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Hook","url":"/Discord-Bridge/api/Hook#new","content":"&lt;/&gt; Hook.new(WebhookURLs: {string}) → Hook Create a new hook with the given URLs. You HAVE to pass a table, you can pass a single url by just surrounding it with {} and it will work.  ","version":null,"tagName":"h3"},{"title":"AddURL​","type":1,"pageTitle":"Hook","url":"/Discord-Bridge/api/Hook#AddURL","content":"&lt;/&gt; Hook:AddURL(URL: string) → () Adds a single URL to the hook.  ","version":null,"tagName":"h3"},{"title":"SendMessage​","type":1,"pageTitle":"Hook","url":"/Discord-Bridge/api/Hook#SendMessage","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; Hook:SendMessage(Message: Message) → () Send the given Message to all the URLs under this hook. This does not happen in a seperate thread and all URLs are posted to in serial. Eventually this will be moved into a promise and multithreaded. ","version":null,"tagName":"h3"},{"title":"Sending Messages","type":0,"sectionRef":"#","url":"/Discord-Bridge/docs/SendingMessages","content":"","keywords":"","version":"Next"},{"title":"Setting up a hook​","type":1,"pageTitle":"Sending Messages","url":"/Discord-Bridge/docs/SendingMessages#setting-up-a-hook","content":" A hook is what actually sends the message to Discord.  Creating a hook is as simple as doing:  local URL = &quot;https://discord.com/api/webhooks/xxx/xxx&quot; local Hook = DiscordBridge.Hook.new({URL})   ","version":"Next","tagName":"h2"},{"title":"Sending a message​","type":1,"pageTitle":"Sending Messages","url":"/Discord-Bridge/docs/SendingMessages#sending-a-message","content":" Now that you have a hook setup you can send a hello world message to see if it goes through. Firstly you will have to create your message like this:  local HelloWorld = DiscordBridge.Message.new():WithName(&quot;My webhook&quot;):WithMessage(&quot;Hello World!&quot;)   now this message can be passed off to the hook to send the message:  Hook:SendMessage(HelloWorld)   ","version":"Next","tagName":"h2"},{"title":"Full Example​","type":1,"pageTitle":"Sending Messages","url":"/Discord-Bridge/docs/SendingMessages#full-example","content":" local DiscordBridge = require(Path.To.DiscordBridge) local URL = &quot;Your URL goes here&quot; -- Make sure the URL goes between the speach marks local Hook = DiscordBridge.Hook.new({URL}) local HelloWorld = DiscordBridge.Message.new():WithName(&quot;My webhook&quot;):WithMessage(&quot;Hello World&quot;) Hook:SendMessage(HelloWorld)  ","version":"Next","tagName":"h2"},{"title":"Creating Messages","type":0,"sectionRef":"#","url":"/Discord-Bridge/docs/Message","content":"","keywords":"","version":"Next"},{"title":"Message Config​","type":1,"pageTitle":"Creating Messages","url":"/Discord-Bridge/docs/Message#message-config","content":" ","version":"Next","tagName":"h2"},{"title":"Name​","type":1,"pageTitle":"Creating Messages","url":"/Discord-Bridge/docs/Message#name","content":" You can configure your message to make the webhook have a different name when sending the message:  local Message = DiscordBridge.Message.new() :WithName(&quot;Cool Name&quot;)   This makes the webhook appear to have a different name while sending the message. By default if you don't add a name the name will appear as &quot;Discord Bridge&quot;.  ","version":"Next","tagName":"h3"},{"title":"Avatar​","type":1,"pageTitle":"Creating Messages","url":"/Discord-Bridge/docs/Message#avatar","content":" You can also configure your message to make the webhook have a different avatar when sending the message. Currently it only supports sending proper URLs that point to images so you cant use Roblox's URIs (rbxassetid://):  local Message = DiscordBridge.Message.new() :WithName(&quot;Cool Name&quot;) :WithAvatar(&quot;https://avatars.githubusercontent.com/u/193603252?s=400&amp;u=74cea0b6fc2193bbe6c1bf7d5313b1bf9c1b8144&amp;v=4&quot;)   This example sets the avatar image to the Void Labs Development logo  ","version":"Next","tagName":"h3"},{"title":"Text Messages​","type":1,"pageTitle":"Creating Messages","url":"/Discord-Bridge/docs/Message#text-messages","content":" A message can only contain 1 normal text message. If you try to add more than one it will just override the previous text. To add text to your message you can use :WithMessage() and passing in your desired text. For example:  local Message = DiscordBridge.Message.new() :WithName(&quot;Cool Name&quot;) :WithAvatar(&quot;https://avatars.githubusercontent.com/u/193603252?s=400&amp;u=74cea0b6fc2193bbe6c1bf7d5313b1bf9c1b8144&amp;v=4&quot;) :WithMessage(&quot;Very cool message&quot;)   ","version":"Next","tagName":"h2"},{"title":"Embedded Messages​","type":1,"pageTitle":"Creating Messages","url":"/Discord-Bridge/docs/Message#embedded-messages","content":" A message can contain up to 10 different embeds, if a message has more discord will refuse to send the message. DiscordBridge currently doesn't allow you to add more than 10 for this reason. In the future it will allow you to add more and then send the embeds in multiple messages to make it look like its all in one message.  Since an embed doesn't require fields there are sections for both below.  ","version":"Next","tagName":"h2"},{"title":"Without Fields​","type":1,"pageTitle":"Creating Messages","url":"/Discord-Bridge/docs/Message#without-fields","content":" You can simply use the :AddEmbed() to add an embed to your message. As mentioned before you can have up to 10 per message. Here is an example:  local Message = DiscordBridge.Message.new() :WithName(&quot;Cool Name&quot;) :WithAvatar(&quot;https://avatars.githubusercontent.com/u/193603252?s=400&amp;u=74cea0b6fc2193bbe6c1bf7d5313b1bf9c1b8144&amp;v=4&quot;) :WithMessage(&quot;Very cool message&quot;) :AddEmbed(&quot;My awesome embed&quot;, &quot;A cool person&quot;, &quot;This is a very cool embedded message!&quot;, &quot;Sent with DiscordBridge&quot;, Color3.new(0, 1, 0))   ","version":"Next","tagName":"h3"},{"title":"With Fields​","type":1,"pageTitle":"Creating Messages","url":"/Discord-Bridge/docs/Message#with-fields","content":" Adding fields requires you create an EmbedFields object, this is because an embed can have multiple fields so it made sense to move them into a separate objects. There is no limit (to my knowledge) of how many fields an embed can have. Below is an example of an embed with a few fields:  local Fields = DiscordBridge.EmbedFields.new() :AddField(&quot;Left&quot;, &quot;I will show up on the left side of the embed&quot;, true) :AddField(&quot;Right&quot;, &quot;I will show up on the right side of the embed&quot;, true) :AddField(&quot;Bottom&quot;, &quot;I will show up below 'Left' and 'Right'&quot;, false) local Message = DiscordBridge.Message.new() :WithName(&quot;Cool Name&quot;) :WithAvatar(&quot;https://avatars.githubusercontent.com/u/193603252?s=400&amp;u=74cea0b6fc2193bbe6c1bf7d5313b1bf9c1b8144&amp;v=4&quot;) :WithMessage(&quot;Very cool message&quot;) :AddEmbed(&quot;My awesome embed&quot;, &quot;A cool person&quot;, &quot;This is a very cool embedded message!&quot;, &quot;Sent with DiscordBridge&quot;, Color3.new(0, 1, 0), Fields)   If you look at the API you will see you need to pass an &quot;inline&quot; Boolean. An inline field means it is on the same line as other Inline embeds. ","version":"Next","tagName":"h3"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/Discord-Bridge/docs/intro","content":"","keywords":"","version":"Next"},{"title":"What is Discord Bridge?​","type":1,"pageTitle":"Getting Started","url":"/Discord-Bridge/docs/intro#what-is-discord-bridge","content":" Discord Bridge is a library designed to make interacting with discord webhooks as simple as possible. Below is a table of support webhook features: a full list of possible features can be found here  Feature\tSupported\tWill get support\tStatusContent\t✅\t- Fully added username\t✅\t- Fully added avatar_url\t⚠️\t- Needs support for using Roblox URIs like rbxassetid:// tts\t❌\t❌\t- embeds\t⚠️\t- Messages with &gt;10 embeds need to be split up allow_mentions\t❌\t✅\t- components *\t❌\t❌\t- files[n] **\t❌\t❌\t- payload_json **\t❌\t❌\t- attachments **\t❌\t❌\tThis might get added in the future flags\t-\t-\t- thread_name\t-\t-\t- applied_tags\t-\t-\t- poll\t❌\t✅\t-  This list is subject to change.  ","version":"Next","tagName":"h2"},{"title":"Installing​","type":1,"pageTitle":"Getting Started","url":"/Discord-Bridge/docs/intro#installing","content":" ","version":"Next","tagName":"h2"},{"title":"Wally​","type":1,"pageTitle":"Getting Started","url":"/Discord-Bridge/docs/intro#wally","content":" Add the following to your wally.toml:  discordbridge = &quot;sebastian2852/discordbridge@1.1.0&quot;   and then run:  wally install   ","version":"Next","tagName":"h3"},{"title":"Git submodule​","type":1,"pageTitle":"Getting Started","url":"/Discord-Bridge/docs/intro#git-submodule","content":" TODO ","version":"Next","tagName":"h3"},{"title":"Creating Webhooks","type":0,"sectionRef":"#","url":"/Discord-Bridge/docs/SettingUpWebhook","content":"","keywords":"","version":"Next"},{"title":"Creating a webhook​","type":1,"pageTitle":"Creating Webhooks","url":"/Discord-Bridge/docs/SettingUpWebhook#creating-a-webhook","content":" Webhooks are only available in server channels. For setup / testing it is recommended that you create a second private channel in your server for setting up this webhook. Later on we can easily switch over the webhook URL. Once you have an empty channel you can continue with the setup.  Right click on your channel and press &quot;Edit Channel&quot; alternately you can press the cog which appears when you hover over the channel name. Then find &quot;Integrations&quot; tab on the left:    Clicking this will go to a different screen where you can press create webhook which will then take you here:    All we care about here is clicking the &quot;Copy Webhook URL&quot; button. Since Discord Bridge can set the username and the avatar as well we don't need to change anything else here.  warning Make sure you don't share this URL as they too will be able to send any messages they want through the webhook which we don't want.  ","version":"Next","tagName":"h2"},{"title":"Hello World​","type":1,"pageTitle":"Creating Webhooks","url":"/Discord-Bridge/docs/SettingUpWebhook#hello-world","content":" Now that we have a webhook setup lets send a &quot;Hello World&quot; message. In your game create a server script and add this code:  local DiscordBridge = require(Path.To.DiscordBridge) local URL = &quot;Your URL goes here&quot; -- Make sure the URL goes between the speach marks local Hook = DiscordBridge.Hook.new({URL}) local HelloWorldMessage = DiscordBridge.Message.new():WithName(&quot;My webhook&quot;):WithMessage(&quot;Hello World&quot;) Hook:SendMessage(HelloWorldMessage)   Pressing play your webhook should send a message like this:    You can now head over to Creating Messages to see how to configure name, avatar and how to add embeds. ","version":"Next","tagName":"h2"},{"title":"Message","type":0,"sectionRef":"#","url":"/Discord-Bridge/api/Message","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Message","url":"/Discord-Bridge/api/Message#types","content":" ","version":null,"tagName":"h2"},{"title":"Embed​","type":1,"pageTitle":"Message","url":"/Discord-Bridge/api/Message#Embed","content":"&lt;/&gt; interface Embed { Title: string Author: string Content: string Footer: string Color: Color3 Fields: Fields } Describes what an embed looks like in code. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Message","url":"/Discord-Bridge/api/Message#functions","content":" ","version":null,"tagName":"h2"},{"title":"new​","type":1,"pageTitle":"Message","url":"/Discord-Bridge/api/Message#new","content":"&lt;/&gt; Message.new() → Message Create a new Message. You can then pass this Message into a Hook to send it to a webhook.  ","version":null,"tagName":"h3"},{"title":"WithMessage​","type":1,"pageTitle":"Message","url":"/Discord-Bridge/api/Message#WithMessage","content":"&lt;/&gt; Message:WithMessage(Content: string) → Message Sets the text the message will have. Since you can only have 1 message when sending a message calling this twice will cause the message to get overriden with the new one.  ","version":null,"tagName":"h3"},{"title":"WithAvatar​","type":1,"pageTitle":"Message","url":"/Discord-Bridge/api/Message#WithAvatar","content":"since v1.1.0 &lt;/&gt; Message:WithAvatar(AvatarImage: string) → Message Sets the image URL of the avatar which the webhook will use when sending this message. The URL must be an actual URL not a roblox URI (rbxassetid://).  ","version":null,"tagName":"h3"},{"title":"WithName​","type":1,"pageTitle":"Message","url":"/Discord-Bridge/api/Message#WithName","content":"&lt;/&gt; Message:WithName(Name: string) → Message Sets the Webhooks username when sending this message.  ","version":null,"tagName":"h3"},{"title":"AddEmbed​","type":1,"pageTitle":"Message","url":"/Discord-Bridge/api/Message#AddEmbed","content":"&lt;/&gt; Message:AddEmbed( Title: string, Author: string, Content: string, Footer: string, Color: Color3 , Fields: EmbedFields? ) → Message Add an embed to the message. INFO A message can only contain 10 embeds. This is outlined in the discord docs  ","version":null,"tagName":"h3"},{"title":"WithEmbed​","type":1,"pageTitle":"Message","url":"/Discord-Bridge/api/Message#WithEmbed","content":"deprecated in v1.1.0 &lt;/&gt; This was deprecated in v1.1.0 Use `AddEmbed` instead Message:WithEmbed( Title: string, Author: string, Content: string, Footer: string, Color: Color3 , Fields: EmbedFields? ) → Message This fuction still works but causes a warning. ","version":null,"tagName":"h3"}],"options":{"id":"default"}}