"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[243],{5390:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>h,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"SettingUpWebhook","title":"Creating Webhooks","description":"This page goes over how to create a discord webhook as well as sending your first message to your webhook.","source":"@site/docs/SettingUpWebhook.md","sourceDirName":".","slug":"/SettingUpWebhook","permalink":"/Discord-Bridge/docs/SettingUpWebhook","draft":false,"unlisted":false,"editUrl":"https://github.com/Void-Labs-Development/Discord-Bridge/edit/master/docs/SettingUpWebhook.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Getting Started","permalink":"/Discord-Bridge/docs/intro"},"next":{"title":"Sending Messages","permalink":"/Discord-Bridge/docs/SendingMessages"}}');var t=n(4848),r=n(8453);const a={sidebar_position:2},i="Creating Webhooks",h={},d=[{value:"Creating a webhook",id:"creating-a-webhook",level:2},{value:"Hello World",id:"hello-world",level:2}];function c(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"creating-webhooks",children:"Creating Webhooks"})}),"\n",(0,t.jsx)(o.p,{children:"This page goes over how to create a discord webhook as well as sending your first message to your webhook."}),"\n",(0,t.jsx)(o.h2,{id:"creating-a-webhook",children:"Creating a webhook"}),"\n",(0,t.jsx)(o.p,{children:"Webhooks are only available in server channels. For setup / testing it is recommended that you create a second private channel in your server for setting up this webhook. Later on we can easily switch over the webhook URL. Once you have an empty channel you can continue with the setup."}),"\n",(0,t.jsx)(o.p,{children:'Right click on your channel and press "Edit Channel" alternately you can press the cog which appears when you hover over the channel name. Then find "Integrations" tab on the left:'}),"\n",(0,t.jsx)("img",{src:"../EditChannelIntegrationsButton.png"}),"\n",(0,t.jsx)(o.p,{children:"Clicking this will go to a different screen where you can press create webhook which will then take you here:"}),"\n",(0,t.jsx)("img",{src:"../WebhookInfoPage.png"}),"\n",(0,t.jsx)(o.p,{children:'All we care about here is clicking the "Copy Webhook URL" button. Since Discord Bridge can set the username and the avatar as well we don\'t need to change anything else here.'}),"\n",(0,t.jsx)(o.admonition,{type:"warning",children:(0,t.jsx)(o.p,{children:"Make sure you don't share this URL as they too will be able to send any messages they want through the webhook which we don't want."})}),"\n",(0,t.jsx)(o.h2,{id:"hello-world",children:"Hello World"}),"\n",(0,t.jsx)(o.p,{children:'Now that we have a webhook setup lets send a "Hello World" message. In your game create a server script and add this code:'}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-lua",children:'local DiscordBridge = require(Path.To.DiscordBridge)\r\nlocal URL = "Your URL goes here" -- Make sure the URL goes between the speach marks\r\n\r\nlocal Hook = DiscordBridge.Hook.new({URL})\r\n\r\nlocal HelloWorldMessage = DiscordBridge.Message.new():WithName("My webhook"):WithMessage("Hello World")\r\nHook:SendMessage(HelloWorldMessage)\n'})}),"\n",(0,t.jsx)(o.p,{children:"Pressing play your webhook should send a message like this:"}),"\n",(0,t.jsx)("img",{src:"../WebhookMessage.png"}),"\n",(0,t.jsxs)(o.p,{children:["You can now head over to ",(0,t.jsx)(o.a,{href:"https://void-labs-development.github.io/Discord-Bridge/docs/Message#message-config",children:"Creating Messages"})," to see how to configure name, avatar and how to add embeds."]})]})}function l(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>a,x:()=>i});var s=n(6540);const t={},r=s.createContext(t);function a(e){const o=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:o},e.children)}}}]);